{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"One of the best things about our school culture is how willing we are to help each other out. Let's maintain that for future generations by sharing our notes on the subjects we're taking :) Contributing \u00b6 If you've made some notes and you'd like to share them, go ahead and make a Pull Request to add them in! The format is pretty self-explanatory. If you do not know how to use GitHub, but already have a link to your notes, get in touch with Wei Min and he'll help you out. If you're worried about the quality of your notes and don't want to share them without someone vetting them, we recommend just sharing them! But if you want someone to look them over, look for Wei Min. Tip Your notes don't have to be hosted on GitHub. Sharing a Dropbox link or OneDrive link is fine also! What Not to Post \u00b6 Please don't post official course materials. This includes the following: Lecture slides Readings Homework question papers If you have any ideas, feel free to contribute!","title":"Home"},{"location":"#contributing","text":"If you've made some notes and you'd like to share them, go ahead and make a Pull Request to add them in! The format is pretty self-explanatory. If you do not know how to use GitHub, but already have a link to your notes, get in touch with Wei Min and he'll help you out. If you're worried about the quality of your notes and don't want to share them without someone vetting them, we recommend just sharing them! But if you want someone to look them over, look for Wei Min. Tip Your notes don't have to be hosted on GitHub. Sharing a Dropbox link or OneDrive link is fine also!","title":"Contributing"},{"location":"#what-not-to-post","text":"Please don't post official course materials. This includes the following: Lecture slides Readings Homework question papers If you have any ideas, feel free to contribute!","title":"What Not to Post"},{"location":"02.126/","text":"02.126 Southeast Asia Under Japan \u00b6 No. of Credits: 12 Subject Credits Pre-requisites: None Course Description \u00b6 Even after seven decades, Singapore abounds with personal and institutional memories of the Japanese Occupation. The brief occupation of Southeast Asia (1941-45) during WWII was a complex phenomenon involving the complicity of many Asian nationalist leaders. While it did contribute to the unravelling of European colonial rule, it was at a tragic human cost, the ethics and gore of which are still debated both in academia and in popular media. Through scholarly texts, memoirs, fiction film (The Burmese Harp, Bridge on the River Kwai) and archival newsreels, this course will explore those tumultuous years in Burma, Indochina, Malaya, Indonesia, and the Philippines. We will read and discuss books and diaries, watch films, debate historical perspectives, take a field trip to the new exhibition at the Ford Motor factory, and reflect on the lingering aspects of the Occupation. Course Notes \u00b6 This set of course notes was graciously shared by Alexander Fonseca , updated as of 10 April 2019. Follow him on GitHub and give him your messages of appreciation! Download View Source Code","title":"02.126 Southeast Asia Under Japan"},{"location":"02.126/#02126-southeast-asia-under-japan","text":"No. of Credits: 12 Subject Credits Pre-requisites: None","title":"02.126 Southeast Asia Under Japan"},{"location":"02.126/#course-description","text":"Even after seven decades, Singapore abounds with personal and institutional memories of the Japanese Occupation. The brief occupation of Southeast Asia (1941-45) during WWII was a complex phenomenon involving the complicity of many Asian nationalist leaders. While it did contribute to the unravelling of European colonial rule, it was at a tragic human cost, the ethics and gore of which are still debated both in academia and in popular media. Through scholarly texts, memoirs, fiction film (The Burmese Harp, Bridge on the River Kwai) and archival newsreels, this course will explore those tumultuous years in Burma, Indochina, Malaya, Indonesia, and the Philippines. We will read and discuss books and diaries, watch films, debate historical perspectives, take a field trip to the new exhibition at the Ford Motor factory, and reflect on the lingering aspects of the Occupation.","title":"Course Description"},{"location":"02.126/#course-notes","text":"This set of course notes was graciously shared by Alexander Fonseca , updated as of 10 April 2019. Follow him on GitHub and give him your messages of appreciation! Download View Source Code","title":"Course Notes"},{"location":"02.229/","text":"02.229 Decision Theory and Practice \u00b6 No. of Credits: 12 Subject Credits Pre-requisites: 10.004 Advanced Math II Course Description \u00b6 In every domain of activity, agents \u2014 typically: human or artificial agents \u2014 face decisions. A decision requires a choice between multiple courses of action which can lead to different outcomes. Decision theory is a set of theories, models, and concepts for such agents, aimed at: (1) determining optimal choice; (2) describing the choices of real-world agents; (3) devising mechanisms which may bring real-world choices closer to optimal ones. This course provides an introduction to the field, and is composed of three parts of approximately equal length and difficulty. Part I outlines the normative theory of decision making. Part II summarizes the relevant findings of behavioral economics and psychology from the past decades, and introduces notions of behavioral design. Part III presents some conceptual problems underlying the theory, competing formalizations, as well as applications to various problems in philosophy, economics, and artificial intelligence. The course relies heavily on paradoxes and counter-intuitive observations to indicate the numerous open and contentious problems in the field. Course Notes \u00b6 This set of course notes was graciously shared by Yustynn Panicker , updated as of 18 May 2019. Follow him on GitHub and give him your messages of appreciation! Download View Source Code","title":"02.229 Decision Theory and Practice"},{"location":"02.229/#02229-decision-theory-and-practice","text":"No. of Credits: 12 Subject Credits Pre-requisites: 10.004 Advanced Math II","title":"02.229 Decision Theory and Practice"},{"location":"02.229/#course-description","text":"In every domain of activity, agents \u2014 typically: human or artificial agents \u2014 face decisions. A decision requires a choice between multiple courses of action which can lead to different outcomes. Decision theory is a set of theories, models, and concepts for such agents, aimed at: (1) determining optimal choice; (2) describing the choices of real-world agents; (3) devising mechanisms which may bring real-world choices closer to optimal ones. This course provides an introduction to the field, and is composed of three parts of approximately equal length and difficulty. Part I outlines the normative theory of decision making. Part II summarizes the relevant findings of behavioral economics and psychology from the past decades, and introduces notions of behavioral design. Part III presents some conceptual problems underlying the theory, competing formalizations, as well as applications to various problems in philosophy, economics, and artificial intelligence. The course relies heavily on paradoxes and counter-intuitive observations to indicate the numerous open and contentious problems in the field.","title":"Course Description"},{"location":"02.229/#course-notes","text":"This set of course notes was graciously shared by Yustynn Panicker , updated as of 18 May 2019. Follow him on GitHub and give him your messages of appreciation! Download View Source Code","title":"Course Notes"},{"location":"30.003/","text":"30.003 Introduction to Probability and Statistics \u00b6 No. of Credits: 12 Subject Credits Pre-requisites: 10.001 Advanced Mathematics I 10.004 Advanced Mathematics II Goal \u00b6 The aim of this course is to introduce concepts of Probability and Statistics. Learning Objectives \u00b6 Apply key concepts of probability, including discrete and continuous random variables, probability distributions, conditioning, independence, expectations, and moments Define and explain the different statistical distributions (e.g., normal, log-normal, Poisson) and the typical phenomena that each distribution often describes Apply the basic rules and theorems in probability including Bayes\u2019s theorem and the Central Limit Theorem (CLT) Define and demonstrate the concepts of estimation and properties of estimators Apply the concepts of interval estimation and confidence intervals Apply the concepts of hypothesis testing and p-value Apply the method of least squares to estimate the parameters in a regression model Use software to facilitate statistical analysis Measurable Outcomes \u00b6 Evaluate the probabilities and conditional probabilities Evaluate expectations and conditional expectations of random variables Approximate the distribution of sum of random variables using CLT Construct point estimators using the method of maximum likelihood Calculate the number of samples needed to construct confidence levels on the mean and variance of a normal distribution Design hypothesis tests for a given set of data and select the appropriate thresholds for the tests Use linear regression analysis to develop an empirical model of experimental data. Apply computer programs to facilitate the analysis of data. Pedagogy \u00b6 Cohort based lecture Hands-on projects Text & References \u00b6 Essentials of Probability and Statistics for Engineers and Scientists , by R. Walpole. et al. Grading \u00b6 Class participation: 5% Homework: 25% Project: 10% Mid-term exam: 30% Final exam: 30% Policies \u00b6 Homework is assigned on every week and is due in the 1 st class of the following week. Course Notes \u00b6 This set of course notes was graciously shared by Wei Min Cher , updated as of 05 Jan 2020. Follow him on GitHub and give him your messages of appreciation! Download View Source Code","title":"30.003 Introduction to Probability and Statistics"},{"location":"30.003/#30003-introduction-to-probability-and-statistics","text":"No. of Credits: 12 Subject Credits Pre-requisites: 10.001 Advanced Mathematics I 10.004 Advanced Mathematics II","title":"30.003 Introduction to Probability and Statistics"},{"location":"30.003/#goal","text":"The aim of this course is to introduce concepts of Probability and Statistics.","title":"Goal"},{"location":"30.003/#learning-objectives","text":"Apply key concepts of probability, including discrete and continuous random variables, probability distributions, conditioning, independence, expectations, and moments Define and explain the different statistical distributions (e.g., normal, log-normal, Poisson) and the typical phenomena that each distribution often describes Apply the basic rules and theorems in probability including Bayes\u2019s theorem and the Central Limit Theorem (CLT) Define and demonstrate the concepts of estimation and properties of estimators Apply the concepts of interval estimation and confidence intervals Apply the concepts of hypothesis testing and p-value Apply the method of least squares to estimate the parameters in a regression model Use software to facilitate statistical analysis","title":"Learning Objectives"},{"location":"30.003/#measurable-outcomes","text":"Evaluate the probabilities and conditional probabilities Evaluate expectations and conditional expectations of random variables Approximate the distribution of sum of random variables using CLT Construct point estimators using the method of maximum likelihood Calculate the number of samples needed to construct confidence levels on the mean and variance of a normal distribution Design hypothesis tests for a given set of data and select the appropriate thresholds for the tests Use linear regression analysis to develop an empirical model of experimental data. Apply computer programs to facilitate the analysis of data.","title":"Measurable Outcomes"},{"location":"30.003/#pedagogy","text":"Cohort based lecture Hands-on projects","title":"Pedagogy"},{"location":"30.003/#text-references","text":"Essentials of Probability and Statistics for Engineers and Scientists , by R. Walpole. et al.","title":"Text &amp; References"},{"location":"30.003/#grading","text":"Class participation: 5% Homework: 25% Project: 10% Mid-term exam: 30% Final exam: 30%","title":"Grading"},{"location":"30.003/#policies","text":"Homework is assigned on every week and is due in the 1 st class of the following week.","title":"Policies"},{"location":"30.003/#course-notes","text":"This set of course notes was graciously shared by Wei Min Cher , updated as of 05 Jan 2020. Follow him on GitHub and give him your messages of appreciation! Download View Source Code","title":"Course Notes"},{"location":"40.002/","text":"40.002 Optimisation \u00b6 No. of Credits: 12 Subject Credits Pre-requisites: 10.004 Advanced Math II 10.007 Modelling The Systems World Pre-requisites (for Exchange Students): Multivariable Calculus and Linear Algebra Course Description \u00b6 The course covers a broad range of optimisation algorithms and models. The course will cover the following topics: linear programming, simplex algorithm, duality, sensitivity analysis, two player zero-sum games, network optimisation, minimum cost flow, network simplex algorithm, integer programming, branch and bound methods, cutting plane methods, dynamic programming. Throughout the course, a number of applications from various areas will be discussed. Learning Objectives \u00b6 At the end of the term, students will be able to: Formulate a linear optimisation model and determine the appropriate algorithm to solve Understand and appreciate the relative computational difficulty of different types of optimisation models Understand duality and sensitivity analysis for linear optimisation Identify potential applications of optimisation to engineering systems problems Measurable Outcomes \u00b6 Be able to formulate a linear optimisation model and know how to solve it Be able to interpret the output from the solution of an optimisation problem and provide intuition on why it is the optimum Be able to interpret and apply the sensitivity analysis reports from linear optimisation Demonstrate a working knowledge of software for solving optimisation problems Course Notes \u00b6 This set of course notes was graciously shared by Tong Hui Kang , updated as of 02 February 2020. Follow him on GitHub and give him your messages of appreciation! Download Midterm Notes Download Finals Notes View Source Code Author's Note \u00b6 This contains my revision notes midterms and finals. I have obtained 90% for the first three of the four exams/quiz. The images are not my work, and most of them are taken from the slides. The source code is available in my repository .","title":"40.002 Optimisation"},{"location":"40.002/#40002-optimisation","text":"No. of Credits: 12 Subject Credits Pre-requisites: 10.004 Advanced Math II 10.007 Modelling The Systems World Pre-requisites (for Exchange Students): Multivariable Calculus and Linear Algebra","title":"40.002 Optimisation"},{"location":"40.002/#course-description","text":"The course covers a broad range of optimisation algorithms and models. The course will cover the following topics: linear programming, simplex algorithm, duality, sensitivity analysis, two player zero-sum games, network optimisation, minimum cost flow, network simplex algorithm, integer programming, branch and bound methods, cutting plane methods, dynamic programming. Throughout the course, a number of applications from various areas will be discussed.","title":"Course Description"},{"location":"40.002/#learning-objectives","text":"At the end of the term, students will be able to: Formulate a linear optimisation model and determine the appropriate algorithm to solve Understand and appreciate the relative computational difficulty of different types of optimisation models Understand duality and sensitivity analysis for linear optimisation Identify potential applications of optimisation to engineering systems problems","title":"Learning Objectives"},{"location":"40.002/#measurable-outcomes","text":"Be able to formulate a linear optimisation model and know how to solve it Be able to interpret the output from the solution of an optimisation problem and provide intuition on why it is the optimum Be able to interpret and apply the sensitivity analysis reports from linear optimisation Demonstrate a working knowledge of software for solving optimisation problems","title":"Measurable Outcomes"},{"location":"40.002/#course-notes","text":"This set of course notes was graciously shared by Tong Hui Kang , updated as of 02 February 2020. Follow him on GitHub and give him your messages of appreciation! Download Midterm Notes Download Finals Notes View Source Code","title":"Course Notes"},{"location":"40.002/#authors-note","text":"This contains my revision notes midterms and finals. I have obtained 90% for the first three of the four exams/quiz. The images are not my work, and most of them are taken from the slides. The source code is available in my repository .","title":"Author's Note"},{"location":"40.011/","text":"40.011 Data and Business Analytics \u00b6 No. of Credits: 12 Subject Credits Prerequisites: 10.009 The Digital World Co-requisites : 40.001 Probability Course Description \u00b6 This course provides an introduction to the Engineering Systems and Design pillar by focusing on using industrial or commercial data to identify an opportunity for system improvement and estimating the value of this improvement to the system owner. A signature feature of the course and the primary motivation for the course material comes from a team-based, semester-long project for an external client. Students develop skills in organising industrial projects and in presenting their results in oral, written, and poster form. In addition, problems in improving system throughput and flowtime are used throughout to motivate many of the topics. Students acquire skills in data manipulation, data visualisation, data analysis, system modelling, revenue and cost estimation, financial ratio analysis, and business simulation. Learning Objectives \u00b6 Upon completion of this course, students will be able to: Plan a project in functional terms identifying inputs, deliverables, resources, client choices, and intermediate work products. Execute a data or business analytics project for a client from project definition through to oral, written, and poster presentation of the results and recommendations. Demonstrate basic skills in transforming raw data into forms useful for visualisation and analysis. Demonstrate the ability to extract and plot data in 2D and geographical representations. Apply data analytic techniques as appropriate for diagnosis, estimation, and prediction. Model a basic queueing system. Develop and assess the outcome of a financial planning model. Derive a quantitative value proposition for a system improvement. Measurable Outcomes \u00b6 Development of a project plan expressed diagrammatically as a hierarchical functional architecture. Development of database queries to join data tables, calculate intermediate results, filter data based on criteria, and aggregate results to achieve a desired report. Application of parallel coordinates to identify correlated variables. Creation of a thematic map in a geographical information system. Application of Little\u2019s Law. Estimation and determination of significance of parameters for a multiple linear regression. Plot and measurement of the goodness of fit of a multiple linear regression. Application of a time series forecasting method. Estimation of queue lengths in a simple network of queues. Estimation of sales revenue from top down (market share) or bottom up (price elasticity) approach. Estimation of variable costs using a learning curve model. Interpretation of financial ratios for a start-up company. Creation of a financial planning spreadsheet for a start-up company. Identification of a business value proposition. Development and delivery of an oral presentation, poster presentation, executive summary, and written report suitable for a professional audience, which describes the key aspects of the project from problem statement to final results and recommendations. Course Notes \u00b6 This set of course notes was graciously shared by Tong Hui Kang , updated as of 02 February 2020. Follow him on GitHub and give him your messages of appreciation! Download Midterm Notes View Source Code Author's Note \u00b6 This contains the cheatsheet for the first half of the course. For the finals, I had used a cheatsheet from my senior. Moreover, I am already familiar with the accounting and finance concepts (I am in the SUTD-SMU Dual Degree Programme).","title":"40.011 Data and Business Analytics"},{"location":"40.011/#40011-data-and-business-analytics","text":"No. of Credits: 12 Subject Credits Prerequisites: 10.009 The Digital World Co-requisites : 40.001 Probability","title":"40.011 Data and Business Analytics"},{"location":"40.011/#course-description","text":"This course provides an introduction to the Engineering Systems and Design pillar by focusing on using industrial or commercial data to identify an opportunity for system improvement and estimating the value of this improvement to the system owner. A signature feature of the course and the primary motivation for the course material comes from a team-based, semester-long project for an external client. Students develop skills in organising industrial projects and in presenting their results in oral, written, and poster form. In addition, problems in improving system throughput and flowtime are used throughout to motivate many of the topics. Students acquire skills in data manipulation, data visualisation, data analysis, system modelling, revenue and cost estimation, financial ratio analysis, and business simulation.","title":"Course Description"},{"location":"40.011/#learning-objectives","text":"Upon completion of this course, students will be able to: Plan a project in functional terms identifying inputs, deliverables, resources, client choices, and intermediate work products. Execute a data or business analytics project for a client from project definition through to oral, written, and poster presentation of the results and recommendations. Demonstrate basic skills in transforming raw data into forms useful for visualisation and analysis. Demonstrate the ability to extract and plot data in 2D and geographical representations. Apply data analytic techniques as appropriate for diagnosis, estimation, and prediction. Model a basic queueing system. Develop and assess the outcome of a financial planning model. Derive a quantitative value proposition for a system improvement.","title":"Learning Objectives"},{"location":"40.011/#measurable-outcomes","text":"Development of a project plan expressed diagrammatically as a hierarchical functional architecture. Development of database queries to join data tables, calculate intermediate results, filter data based on criteria, and aggregate results to achieve a desired report. Application of parallel coordinates to identify correlated variables. Creation of a thematic map in a geographical information system. Application of Little\u2019s Law. Estimation and determination of significance of parameters for a multiple linear regression. Plot and measurement of the goodness of fit of a multiple linear regression. Application of a time series forecasting method. Estimation of queue lengths in a simple network of queues. Estimation of sales revenue from top down (market share) or bottom up (price elasticity) approach. Estimation of variable costs using a learning curve model. Interpretation of financial ratios for a start-up company. Creation of a financial planning spreadsheet for a start-up company. Identification of a business value proposition. Development and delivery of an oral presentation, poster presentation, executive summary, and written report suitable for a professional audience, which describes the key aspects of the project from problem statement to final results and recommendations.","title":"Measurable Outcomes"},{"location":"40.011/#course-notes","text":"This set of course notes was graciously shared by Tong Hui Kang , updated as of 02 February 2020. Follow him on GitHub and give him your messages of appreciation! Download Midterm Notes View Source Code","title":"Course Notes"},{"location":"40.011/#authors-note","text":"This contains the cheatsheet for the first half of the course. For the finals, I had used a cheatsheet from my senior. Moreover, I am already familiar with the accounting and finance concepts (I am in the SUTD-SMU Dual Degree Programme).","title":"Author's Note"},{"location":"40.016/","text":"40.016 The Analytics Edge \u00b6 No. of Credits: 12 Subject Credits Prerequisites: 40.002 Optimisation 40.004 Statistics ( OR 30.003 / 50.034 Introduction to Probability and Statistics) Course Description \u00b6 The increasing availability of data is changing the way organizations are thinking about themselves and the way they interact with the world. Data is helping improve the profits of businesses, the quality of life of individuals, the predictions on performance of sports teams and social interactions. In this course you will learn how to use data and analytics to give you an edge. The course will expose students to real world examples of how analytics is being used with examples from Moneyball, Watson and the Framingham Heart Study among others. Through these examples you will learn on how to use tools of analytics such as linear regression, logistic regression, classification and regression trees, graphical models, visualization, text analytics, clustering and optimization in practice. The statistical software R and spreadsheets will be used in the course. Learning Objectives \u00b6 At the end of the term, students will be able to: Identify the link between data and models to help make better decisions that add value to individuals, companies and institutions Describe data effectively, predict future outcomes and prescribe decisions using the tools of analytics Measurable Outcomes \u00b6 Develop a mathematical model from a given dataset Solve the mathematical model in the software R using the tools of analytics such as regression, classification and regression trees, graphical models, visualization, text analytics, clustering and optimization in a problem context. Justify the decisions from the mathematical model are better than heuristics and expert judgements Course Notes \u00b6 This set of course notes was graciously shared by Tong Hui Kang , updated as of 02 February 2020. Follow him on GitHub and give him your messages of appreciation! Download R Cheatsheet View Source Code Author's Note \u00b6 This contains my R cheatsheet, which is good for both midterms and finals.","title":"40.016 The Analytics Edge"},{"location":"40.016/#40016-the-analytics-edge","text":"No. of Credits: 12 Subject Credits Prerequisites: 40.002 Optimisation 40.004 Statistics ( OR 30.003 / 50.034 Introduction to Probability and Statistics)","title":"40.016 The Analytics Edge"},{"location":"40.016/#course-description","text":"The increasing availability of data is changing the way organizations are thinking about themselves and the way they interact with the world. Data is helping improve the profits of businesses, the quality of life of individuals, the predictions on performance of sports teams and social interactions. In this course you will learn how to use data and analytics to give you an edge. The course will expose students to real world examples of how analytics is being used with examples from Moneyball, Watson and the Framingham Heart Study among others. Through these examples you will learn on how to use tools of analytics such as linear regression, logistic regression, classification and regression trees, graphical models, visualization, text analytics, clustering and optimization in practice. The statistical software R and spreadsheets will be used in the course.","title":"Course Description"},{"location":"40.016/#learning-objectives","text":"At the end of the term, students will be able to: Identify the link between data and models to help make better decisions that add value to individuals, companies and institutions Describe data effectively, predict future outcomes and prescribe decisions using the tools of analytics","title":"Learning Objectives"},{"location":"40.016/#measurable-outcomes","text":"Develop a mathematical model from a given dataset Solve the mathematical model in the software R using the tools of analytics such as regression, classification and regression trees, graphical models, visualization, text analytics, clustering and optimization in a problem context. Justify the decisions from the mathematical model are better than heuristics and expert judgements","title":"Measurable Outcomes"},{"location":"40.016/#course-notes","text":"This set of course notes was graciously shared by Tong Hui Kang , updated as of 02 February 2020. Follow him on GitHub and give him your messages of appreciation! Download R Cheatsheet View Source Code","title":"Course Notes"},{"location":"40.016/#authors-note","text":"This contains my R cheatsheet, which is good for both midterms and finals.","title":"Author's Note"},{"location":"40.302/","text":"40.302 Advanced Topics in Optimisation \u00b6 No. of Credits: 6 Subject Credits Pre-requisites: 40.002 Optimisation Course Description \u00b6 This course is a follow-up to the ESD core course in Optimisation that students take in Term 4. The course will cover advanced topics in optimisation with a strong focus on modelling, formulations and optimisation techniques. Students will be introduced to the basics and design of algebraic modelling languages and spreadsheet models for describing optimisation problems. The primary application on which the course will be based is scheduling. Through the application, students will be exposed to advanced topics in optimisation such as proving optimality of schedules, integer programming formulations, heuristics, deterministic and stochastic dynamic optimization frameworks. Learning Objectives \u00b6 At the end of the term, students will be able to: Use optimization techniques as a decision-making tool in scheduling applications. Model optimization problems using algebraic modeling languages and spreadsheets. Solve moderate-sized yet practical optimization problems that are not simple enough to be solved by hand using techniques such as integer programming, heuristics, deterministic and stochastic dynamic optimization. Measurable Outcomes \u00b6 Formulate practical optimization problems in the scheduling domain that effectively tradeoff realism with tractability Use an algebraic modeling language to solve scheduling problems using the tool of integer programming Identify and develop appropriate methodologies to solve optimization problems in scheduling Course Notes \u00b6 This set of course notes was graciously shared by Yustynn Panicker , updated as of 06 March 2019. Follow him on GitHub and give him your messages of appreciation! Download","title":"40.302 Advanced Topics in Optimisation"},{"location":"40.302/#40302-advanced-topics-in-optimisation","text":"No. of Credits: 6 Subject Credits Pre-requisites: 40.002 Optimisation","title":"40.302 Advanced Topics in Optimisation"},{"location":"40.302/#course-description","text":"This course is a follow-up to the ESD core course in Optimisation that students take in Term 4. The course will cover advanced topics in optimisation with a strong focus on modelling, formulations and optimisation techniques. Students will be introduced to the basics and design of algebraic modelling languages and spreadsheet models for describing optimisation problems. The primary application on which the course will be based is scheduling. Through the application, students will be exposed to advanced topics in optimisation such as proving optimality of schedules, integer programming formulations, heuristics, deterministic and stochastic dynamic optimization frameworks.","title":"Course Description"},{"location":"40.302/#learning-objectives","text":"At the end of the term, students will be able to: Use optimization techniques as a decision-making tool in scheduling applications. Model optimization problems using algebraic modeling languages and spreadsheets. Solve moderate-sized yet practical optimization problems that are not simple enough to be solved by hand using techniques such as integer programming, heuristics, deterministic and stochastic dynamic optimization.","title":"Learning Objectives"},{"location":"40.302/#measurable-outcomes","text":"Formulate practical optimization problems in the scheduling domain that effectively tradeoff realism with tractability Use an algebraic modeling language to solve scheduling problems using the tool of integer programming Identify and develop appropriate methodologies to solve optimization problems in scheduling","title":"Measurable Outcomes"},{"location":"40.302/#course-notes","text":"This set of course notes was graciously shared by Yustynn Panicker , updated as of 06 March 2019. Follow him on GitHub and give him your messages of appreciation! Download","title":"Course Notes"},{"location":"40.305/","text":"40.305 Advanced Topics in Stochastic Modelling \u00b6 No. of Credits: 6 Subject Credits Pre-requisites: 40.001 Probability ( OR 30.003 / 50.034 Introduction to Probability and Statistics) 40.012 Manufacturing and Service Operation Pre-requisites (for Exchange Students): Markov chains and queuing theory Course Description \u00b6 This is a follow-up to the introduction course on Stochastic Modelling. Students learn advanced methods in stochastic modelling with a focus on business, engineering and financial math applications. Topics to be covered include renewal theory and martingales (discrete time). Time permitting other topics such as branching processes, spatial processes or stochastic networks could be introduced. Learning Objectives \u00b6 At the end of the term, students will be able to: Apply the technique of Martingale in finance Apply renewal theory in operations management Measurable Outcomes \u00b6 Show the examples of Martingale, Renewal Process, and Brownian Motion. Construct or develop a stochastic model using these concepts. Identify and solve engineering problems involving these concepts. Analyse these concepts in a broader context of probability theory. Course Notes \u00b6 This set of course notes was graciously shared by Yustynn Panicker , updated as of 30 April 2019. Follow him on GitHub and give him your messages of appreciation! Download","title":"40.305 Advanced Topics in Stochastic Modelling"},{"location":"40.305/#40305-advanced-topics-in-stochastic-modelling","text":"No. of Credits: 6 Subject Credits Pre-requisites: 40.001 Probability ( OR 30.003 / 50.034 Introduction to Probability and Statistics) 40.012 Manufacturing and Service Operation Pre-requisites (for Exchange Students): Markov chains and queuing theory","title":"40.305 Advanced Topics in Stochastic Modelling"},{"location":"40.305/#course-description","text":"This is a follow-up to the introduction course on Stochastic Modelling. Students learn advanced methods in stochastic modelling with a focus on business, engineering and financial math applications. Topics to be covered include renewal theory and martingales (discrete time). Time permitting other topics such as branching processes, spatial processes or stochastic networks could be introduced.","title":"Course Description"},{"location":"40.305/#learning-objectives","text":"At the end of the term, students will be able to: Apply the technique of Martingale in finance Apply renewal theory in operations management","title":"Learning Objectives"},{"location":"40.305/#measurable-outcomes","text":"Show the examples of Martingale, Renewal Process, and Brownian Motion. Construct or develop a stochastic model using these concepts. Identify and solve engineering problems involving these concepts. Analyse these concepts in a broader context of probability theory.","title":"Measurable Outcomes"},{"location":"40.305/#course-notes","text":"This set of course notes was graciously shared by Yustynn Panicker , updated as of 30 April 2019. Follow him on GitHub and give him your messages of appreciation! Download","title":"Course Notes"},{"location":"50.003/","text":"50.003 Elements of Software Construction \u00b6 No. of Credits: 12 Subject Credits Pre-requisites: 50.001 Introduction to Information Systems & Programming Course Description \u00b6 This course is an introduction to the fundamental principles and techniques of software construction that have greatest impact on practice. Topics include capturing the essence of a problem by recognizing and inventing suitable abstractions; key paradigms, including basic concepts of software design and their expression using notations from Unified Modeling Language (UML); software testing, automated software test generation, automated software security testing via blackbox, greybox and whitebox fuzzing approaches, detection and removal of software code smells, software coding standards to avoid security loopholes, concurrent programming, including programming with threads and processes, understanding concurrency problems like deadlock and data race. This course includes exercises in software design, implementation, testing and reasoning. Learning Objectives \u00b6 Design medium-scale software system from scratch: formulating and analyzing the problem to be solved; writing formal software requirements, exploring and formulating system designs; and using extensive and systematic testing and reasoning to ensure quality. Apply key software engineering ideas, including invariants, decoupling, and data abstraction. Apply key software engineering ideas, including software design, specification, abstraction, verification and correctness. Apply widely used design concepts and notations (UML diagrams) and patterns in exploring and articulating problems and designs. Learning effective techniques on ensuring quality of large-scale software systems. Apply concepts of systematic software testing to discover bugs (including security vulnerabilities) in large-scale software systems. Apply concepts to reason about the security loopholes in software systems. Learning secure software coding standards. Learning key concepts in developing concurrent programs. Learning key concepts in reasoning and testing concurrent programs. Measurable Outcomes \u00b6 Build medium-scale software prototype (LO 1-5). Design solution to questions related to the requirement prior to software development. (LO1, LO2 and LO4). Design blackbox, whitebox and diabolic software tests for validating software prototype. (LO6). Design critical part of the software by reasoning about its security. (LO8). Design small/medium-scale concurrent programs. (LO9). Design techniques to reason about the correctness of the concurrent programs (LO10). Design software prototype with the objective of its maintainability and security. (LO5, LO7). Design sofware testing methodologies to automatically discover potential security vulnerabilities, such as program crashes (LO6). Course Notes \u00b6 2019 \u00b6 This set of course notes was graciously shared by Siew Wen , updated as of 15 Oct 2019. Follow her on GitHub and give her your messages of appreciation! Download View Source Code 2018 \u00b6 This set of course notes was graciously shared by Joel Huang , updated as of 25 April 2018. Follow him on GitHub and give him your messages of appreciation! Download","title":"50.003 Elements of Software Construction"},{"location":"50.003/#50003-elements-of-software-construction","text":"No. of Credits: 12 Subject Credits Pre-requisites: 50.001 Introduction to Information Systems & Programming","title":"50.003 Elements of Software Construction"},{"location":"50.003/#course-description","text":"This course is an introduction to the fundamental principles and techniques of software construction that have greatest impact on practice. Topics include capturing the essence of a problem by recognizing and inventing suitable abstractions; key paradigms, including basic concepts of software design and their expression using notations from Unified Modeling Language (UML); software testing, automated software test generation, automated software security testing via blackbox, greybox and whitebox fuzzing approaches, detection and removal of software code smells, software coding standards to avoid security loopholes, concurrent programming, including programming with threads and processes, understanding concurrency problems like deadlock and data race. This course includes exercises in software design, implementation, testing and reasoning.","title":"Course Description"},{"location":"50.003/#learning-objectives","text":"Design medium-scale software system from scratch: formulating and analyzing the problem to be solved; writing formal software requirements, exploring and formulating system designs; and using extensive and systematic testing and reasoning to ensure quality. Apply key software engineering ideas, including invariants, decoupling, and data abstraction. Apply key software engineering ideas, including software design, specification, abstraction, verification and correctness. Apply widely used design concepts and notations (UML diagrams) and patterns in exploring and articulating problems and designs. Learning effective techniques on ensuring quality of large-scale software systems. Apply concepts of systematic software testing to discover bugs (including security vulnerabilities) in large-scale software systems. Apply concepts to reason about the security loopholes in software systems. Learning secure software coding standards. Learning key concepts in developing concurrent programs. Learning key concepts in reasoning and testing concurrent programs.","title":"Learning Objectives"},{"location":"50.003/#measurable-outcomes","text":"Build medium-scale software prototype (LO 1-5). Design solution to questions related to the requirement prior to software development. (LO1, LO2 and LO4). Design blackbox, whitebox and diabolic software tests for validating software prototype. (LO6). Design critical part of the software by reasoning about its security. (LO8). Design small/medium-scale concurrent programs. (LO9). Design techniques to reason about the correctness of the concurrent programs (LO10). Design software prototype with the objective of its maintainability and security. (LO5, LO7). Design sofware testing methodologies to automatically discover potential security vulnerabilities, such as program crashes (LO6).","title":"Measurable Outcomes"},{"location":"50.003/#course-notes","text":"","title":"Course Notes"},{"location":"50.003/#2019","text":"This set of course notes was graciously shared by Siew Wen , updated as of 15 Oct 2019. Follow her on GitHub and give her your messages of appreciation! Download View Source Code","title":"2019"},{"location":"50.003/#2018","text":"This set of course notes was graciously shared by Joel Huang , updated as of 25 April 2018. Follow him on GitHub and give him your messages of appreciation! Download","title":"2018"},{"location":"50.005/","text":"50.005 Computer System Engineering \u00b6 No. of Credits: 12 Subject Credits Pre-requisites: 50.002 Computation Structures Course Description \u00b6 Topics on the engineering of computing and networking systems: design challenges; techniques for controlling complexity; operating systems and networking systems: performance; strong modularity; client-server; naming; security and privacy, atomicity and coordination of concurrent activities; user and end-to-end applications. Case studies of working systems and readings from the current literature provide comparisons and contrasts. Students will complete two design/implementation projects. Learning Objectives \u00b6 At the end of the term, students will be able to: Explain sources of complexity in computer system design, e.g. incommensurate scaling and emergent properties. Exploit systems design principles to cope with the complexity, e.g., modularity, hierarchy, layering, indirection. Command software tools to measure performance and understand how actual computing and network systems work. Explain the design and implementation of real-world computing and networking (i.e., Internet) systems, e.g., DNS, HTTP, OpenSSL. Develop programming skills to develop OS and networking tools and software. Measurable Outcomes \u00b6 Use software tools to understand, measure, and design modern computing systems. Implement concurrent and network programs in Java. Explain the conceptual underpinnings of modern computing system design; apply relevant principles and techniques in conceptual problem solving. Topics Covered \u00b6 Key challenges and basic principles in the design of large-scale computing systems Process management and multithreaded programming Process scheduling, synchronization, deadlock Memory management, file system, and I/O system End-to-end network performance (e.g., loss, throughput, and delay) and impact on network applications Network security: applied cryptography; key certification; confidentiality, integrity, authentication, and availability; types of network attacks; design of secure network protocols Network naming and addressing; DNS as a scalable and distributed infrastructure for name resolution in the Internet Client-server network programming; HTTP and the World Wide Web Course Notes \u00b6 2019 \u00b6 This set of course notes was graciously shared by Siew Wen , updated as of 15 Oct 2019. Follow her on GitHub and give her your messages of appreciation! Download View Source Code 2018 \u00b6 This set of course notes was graciously shared by Shaun Toh and Joel Huang , updated as of 24 April 2018. Follow them on GitHub and give them your messages of appreciation! Download","title":"50.005 Computer System Engineering"},{"location":"50.005/#50005-computer-system-engineering","text":"No. of Credits: 12 Subject Credits Pre-requisites: 50.002 Computation Structures","title":"50.005 Computer System Engineering"},{"location":"50.005/#course-description","text":"Topics on the engineering of computing and networking systems: design challenges; techniques for controlling complexity; operating systems and networking systems: performance; strong modularity; client-server; naming; security and privacy, atomicity and coordination of concurrent activities; user and end-to-end applications. Case studies of working systems and readings from the current literature provide comparisons and contrasts. Students will complete two design/implementation projects.","title":"Course Description"},{"location":"50.005/#learning-objectives","text":"At the end of the term, students will be able to: Explain sources of complexity in computer system design, e.g. incommensurate scaling and emergent properties. Exploit systems design principles to cope with the complexity, e.g., modularity, hierarchy, layering, indirection. Command software tools to measure performance and understand how actual computing and network systems work. Explain the design and implementation of real-world computing and networking (i.e., Internet) systems, e.g., DNS, HTTP, OpenSSL. Develop programming skills to develop OS and networking tools and software.","title":"Learning Objectives"},{"location":"50.005/#measurable-outcomes","text":"Use software tools to understand, measure, and design modern computing systems. Implement concurrent and network programs in Java. Explain the conceptual underpinnings of modern computing system design; apply relevant principles and techniques in conceptual problem solving.","title":"Measurable Outcomes"},{"location":"50.005/#topics-covered","text":"Key challenges and basic principles in the design of large-scale computing systems Process management and multithreaded programming Process scheduling, synchronization, deadlock Memory management, file system, and I/O system End-to-end network performance (e.g., loss, throughput, and delay) and impact on network applications Network security: applied cryptography; key certification; confidentiality, integrity, authentication, and availability; types of network attacks; design of secure network protocols Network naming and addressing; DNS as a scalable and distributed infrastructure for name resolution in the Internet Client-server network programming; HTTP and the World Wide Web","title":"Topics Covered"},{"location":"50.005/#course-notes","text":"","title":"Course Notes"},{"location":"50.005/#2019","text":"This set of course notes was graciously shared by Siew Wen , updated as of 15 Oct 2019. Follow her on GitHub and give her your messages of appreciation! Download View Source Code","title":"2019"},{"location":"50.005/#2018","text":"This set of course notes was graciously shared by Shaun Toh and Joel Huang , updated as of 24 April 2018. Follow them on GitHub and give them your messages of appreciation! Download","title":"2018"},{"location":"50.034/","text":"50.034 Introduction to Probability and Statistics \u00b6 No. of Credits: 12 Subject Credits Pre-requisites: None Course Description \u00b6 This course is an introduction to statistics and probability covering essential topics. Sample space, discrete and continuous random variables, probability distributions, joint and conditional distributions, expectation, transformation of random variables, limit theorems, estimation theory, hypothesis testing, confidence interval, statistical tests, and regression. Learning Objectives \u00b6 Apply key concepts of probability, including discrete and continuous random variables, probability distributions, conditioning, independence, expectations, and moments. Define and explain the different statistical distributions (e.g., normal, log-normal, Poisson, Weibull) and the typical phenomena that each distribution often describes. Apply the basic rules and theorems in probability including Bayes\u2019s theorem and the Central Limit Theorem (CLT). Define and demonstrate the concepts of estimation and properties of estimators. Apply the concepts of interval estimation and confidence intervals. Apply the concepts of hypothesis testing and p-value. Apply the method of least squares to estimate the parameters in a regression model. Use standard software (e.g., Matlab) to facilitate statistical analysis. Measurable Outcomes \u00b6 Evaluate the probabilities and conditional probabilities. Evaluate expectations and conditional expectations of random variables. Approximate the distribution of sum of random variables using CLT. Construct point estimators using the method of maximum likelihood. Calculate the number of samples needed to construct confidence levels on the mean and variance of a normal distribution. Design hypothesis tests for a given set of data and select the appropriate thresholds for the tests. Use linear regression analysis to develop an empirical model of experimental data. Create computer programs to facilitate the analysis and representation of data. Course Notes \u00b6 This set of course notes was graciously shared by Koh Jing Yu , updated as of 11 April 2018. Follow him on GitHub and give him your messages of appreciation! Download","title":"50.034 Introduction to Probability and Statistics"},{"location":"50.034/#50034-introduction-to-probability-and-statistics","text":"No. of Credits: 12 Subject Credits Pre-requisites: None","title":"50.034 Introduction to Probability and Statistics"},{"location":"50.034/#course-description","text":"This course is an introduction to statistics and probability covering essential topics. Sample space, discrete and continuous random variables, probability distributions, joint and conditional distributions, expectation, transformation of random variables, limit theorems, estimation theory, hypothesis testing, confidence interval, statistical tests, and regression.","title":"Course Description"},{"location":"50.034/#learning-objectives","text":"Apply key concepts of probability, including discrete and continuous random variables, probability distributions, conditioning, independence, expectations, and moments. Define and explain the different statistical distributions (e.g., normal, log-normal, Poisson, Weibull) and the typical phenomena that each distribution often describes. Apply the basic rules and theorems in probability including Bayes\u2019s theorem and the Central Limit Theorem (CLT). Define and demonstrate the concepts of estimation and properties of estimators. Apply the concepts of interval estimation and confidence intervals. Apply the concepts of hypothesis testing and p-value. Apply the method of least squares to estimate the parameters in a regression model. Use standard software (e.g., Matlab) to facilitate statistical analysis.","title":"Learning Objectives"},{"location":"50.034/#measurable-outcomes","text":"Evaluate the probabilities and conditional probabilities. Evaluate expectations and conditional expectations of random variables. Approximate the distribution of sum of random variables using CLT. Construct point estimators using the method of maximum likelihood. Calculate the number of samples needed to construct confidence levels on the mean and variance of a normal distribution. Design hypothesis tests for a given set of data and select the appropriate thresholds for the tests. Use linear regression analysis to develop an empirical model of experimental data. Create computer programs to facilitate the analysis and representation of data.","title":"Measurable Outcomes"},{"location":"50.034/#course-notes","text":"This set of course notes was graciously shared by Koh Jing Yu , updated as of 11 April 2018. Follow him on GitHub and give him your messages of appreciation! Download","title":"Course Notes"}]}